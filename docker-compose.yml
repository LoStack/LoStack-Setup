networks:
  traefik_network:
    driver: bridge
    name: traefik_network
    external: false   
 
services:
  authelia:
    image: authelia/authelia
    hostname: authelia
    container_name: authelia
    restart: unless-stopped
    networks:
      - traefik_network
    depends_on:
      - traefik
      - openldap
    environment:
      TZ: $TZ
      X_AUTHELIA_CONFIG_FILTERS: template
      AUTHELIA_SERVER_BUFFERS_READ: 16384
      AUTHELIA_SERVER_BUFFERS_WRITE: 16384
      AUTHELIA_LOG_LEVEL: info
      AUTHELIA_LOG_FORMAT: text
      AUTHELIA_LOG_FILE_PATH: /logs/authelia/authelia.log
      AUTHELIA_LOG_KEEP_STDOUT: false
      AUTHELIA_REGULATION_MAX_RETRIES: 10
      AUTHELIA_REGULATION_FIND_TIME: 2 minutes
      AUTHELIA_REGULATION_BAN_TIME: 3 minutes
      AUTHELIA_SERVER_ADDRESS: :9091
      AUTHELIA_THEME: ${AUTHELIA_THEME}
      AUTHELIA_TOTP_ISSUER: authelia.com
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ATTRIBUTES_GROUP_NAME: cn
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_IMPLEMENTATION: custom
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDRESS: ldaps://openldap
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_START_TLS: false
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_TLS_SKIP_VERIFY: true
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_TLS_MINIMUM_VERSION: TLS1.2
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_BASE_DN: ${LDAP_BASE_DN}
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_USERS_DN: ou=people
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERS_FILTER: (&({username_attribute}={input})(objectClass=person))
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_GROUPS_DN: ou=groups
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUPS_FILTER: (&(uniquemember={dn})(objectclass=groupOfUniqueNames))
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USER: cn=${LDAP_ADMIN_USER:-admin},${LDAP_BASE_DN}
      DOMAINNAME: ${DOMAINNAME}
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD}
      CUST_AUTHELIA_PREFIX: ${AUTHELIA_PREFIX}
      CUST_AUTHELIA_MYSQL_USERNAME: lostack
      CUST_AUTHELIA_MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      CUST_AUTHELIA_EXPIRATION: ${AUTHELIA_EXPIRATION:-24 hour} 
      CUST_AUTHELIA_INACTIVITY: ${AUTHELIA_INACTIVITY:-4 hour}
    # Custom entrypoint, creates secrets for use in Authelia config
    entrypoint: |
      sh -c '
      set -e
      SECRETS_DIR="/lostack_secrets"
      mkdir -p "$$SECRETS_DIR"
      generate_key() {
          local length=$${1:-64}
          dd if=/dev/urandom bs=1 count=$$length 2>/dev/null | base64 | tr -d "\n" | head -c $$length
      }
      create_secret() {
          local secret_name="$$1"
          local secret_file="$$SECRETS_DIR/$$secret_name"
          
          if [ ! -f "$$secret_file" ]; then
              echo "Generating new secret: $$secret_name"
              generate_key 64 > "$$secret_file"
              chmod 600 "$$secret_file"
          else
              echo "Using existing secret: $$secret_name"
          fi
      }
      echo "Initializing Authelia secrets..."
      create_secret jwt_secret
      create_secret storage_encryption_key
      create_secret session_secret
      echo "Secrets initialized successfully"
      echo "Starting Authelia..."
      exec /app/entrypoint.sh
      '
    volumes:
      - ${CONFIG_DIR}/authelia:/config
      - ${CONFIG_DIR}/authelia/lostack_secrets:/lostack_secrets:rw
      - ${LOGS_DIR}/authelia:/logs/authelia
    labels:
      # Add traefik routing
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`${AUTHELIA_PREFIX}.${DOMAINNAME}`) || Host(`auth.${DOMAINNAME}`)'
      - 'traefik.http.routers.authelia.entrypoints=https' 
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.routers.authelia.tls.options=default'
      # Add forwardauth and proxy header to authelia middleware
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/authz/forward-auth'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
      # Configure homepage automatic discovery
      - "homepage.name=Authelia"
      - "homepage.group=Services" 
      - "homepage.icon=authelia"
      - "homepage.description=Authentication service"
      - "homepage.href=https://authelia.${DOMAINNAME}/"
 
  openldap:
    image: osixia/openldap:latest
    container_name: openldap
    hostname: openldap
    restart: unless-stopped
    command: --copy-service
    networks:
      - traefik_network
    environment:
      TZ: ${TZ}
      LDAP_ORGANISATION: ${LDAP_ORGANISATION}
      LDAP_DOMAIN: ${DOMAINNAME}
      LDAP_BASE_DN: ${LDAP_BASE_DN}
      LDAP_ADMIN_USERNAME: ${LDAP_ADMIN_USER}
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD}
      LDAP_CONFIG_PASSWORD: ${LDAP_CONFIG_PASSWORD}
      LDAP_TLS_VERIFY_CLIENT: ${LDAP_TLS_VERIFY_CLIENT:-try}
      LDAP_READONLY_USER: ${LDAP_READONLY_USER:-true}
      LDAP_READONLY_USER_USERNAME: ${LDAP_READONLY_USER_USERNAME:-readonly}
      LDAP_READONLY_USER_PASSWORD: ${LDAP_READONLY_USER_PASSWORD:-readonly}
      LDAP_RFC2307BIS_SCHEMA: true
      LDAP_BACKEND: mdb
      LDAP_REPLICATION: false
      KEEP_EXISTING_CONFIG: false
      LDAP_REMOVE_CONFIG_AFTER_SETUP: true
      LDAP_PORT_NUMBER: ${OPENLDAP_PORT:-389}
      LDAP_LDAPS_PORT_NUMBER: ${OPENLDAP_LDAPS_PORT:-636}
    volumes: 
      - ${CONFIG_DIR}/openldap/ldap/db:/var/lib/ldap:rw
      - ${CONFIG_DIR}/openldap/ldap/conf:/etc/ldap/slapd.d:rw
    labels:
      - "homepage.name=OpenLDAP"
      - "homepage.group=Databases"
      - "homepage.icon=openldap"
      - "homepage.description=Users and Groups Service"

  lostack:
    image: ghcr.io/lostack/lostack:main
    container_name: lostack
    hostname: lostack
    networks:
      traefik_network: {}
    stop_signal: SIGINT
    depends_on:
      - lostack-db
    restart: unless-stopped
    environment:
      # config
      TZ: ${TZ}
      DOMAIN_NAME: ${DOMAINNAME}
      
      # First run configuration
      FIRST_RUN_CREATE_SELF_SIGNED_CERT: ${FIRST_RUN_CREATE_SELF_SIGNED_CERT}
      FIRST_RUN_SETUP_MEDIA_FOLDERS: ${FIRST_RUN_SETUP_MEDIA_FOLDERS}
      FIRST_RUN_CREATE_AUTHELIA_CONFIG: ${FIRST_RUN_CREATE_AUTHELIA_CONFIG}
      FIRST_RUN_CREATE_TRAEFIK_CONFIG: ${FIRST_RUN_CREATE_TRAEFIK_CONFIG}
      FIRST_RUN_CREATE_COREDNS_CONFIG: ${FIRST_RUN_CREATE_COREDNS_CONFIG}
      FIRST_RUN_SETUP_LDAP: ${FIRST_RUN_SETUP_LDAP}
      FIRST_RUN_ADDITIONAL_LDAP_GROUPS: ${FIRST_RUN_ADDITIONAL_LDAP_GROUPS}

      # custom depot
      DEPOT_URL: ${LOSTACK_DEPOT_URL}

      # debug / dev
      DEBUG: ${LOSTACK_DEBUG}
      DEPOT_DEV_MODE: ${LOSTACK_USE_LOCAL_DEPOT:-false}

      # proxy
      ADMIN_GROUP: ${LDAP_ADMIN_GROUP}
      USERNAME_HEADER: Remote-User
      GROUPS_HEADER: Remote-Groups
      TRUSTED_PROXY_IPS: ${TRUSTED_PROXYS}

      # backend db
      DB_HOST: lostack-db
      DB_NAME: lostack-db
      DB_PASSWORD: ${DATABASE_PASSWORD}
      DB_PORT: 3306
      DB_USER: lostack

      # ldap
      LDAP_HOST: openldap
      LDAP_PORT_NUMBER: ${OPENLDAP_PORT:-389}
      LDAP_LDAPS_PORT_NUMBER: ${OPENLDAP_LDAPS_PORT:-636}
      LDAP_USE_LDAPS: true
      LDAP_ORGANISATION: ${LDAP_ORGANISATION:-lostack.internal}
      LDAP_DOMAIN: ${DOMAINNAME:-lostack.internal}
      LDAP_BASE_DN: ${LDAP_BASE_DN:-dc=lostack,dc=internal}
      LDAP_ADMIN_USERNAME: ${LDAP_ADMIN_USER:-admin}
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD:-first_time_login_password}
      LDAP_ADMIN_BIND_DN: "cn=${LDAP_ADMIN_USER:-admin},${LDAP_BASE_DN:-dc=lostack,dc=internal}"
      LDAP_TLS_VERIFY_CLIENT: ${LDAP_TLS_VERIFY_CLIENT:-try}
      LDAP_IGNORE_CERT_ERRORS: true
      LDAP_REQUIRE_STARTTLS: false
      EMAIL_DOMAIN: "${DOMAINNAME:-lostack.internal}"

      # etc
      PYTHONUNBUFFERED: 1
    volumes:
      - ./:/docker
      - ${APPDATA_DIR}/lostack:/appdata
      - ${CERTS_DIR}:/certs
      - ${CONFIG_DIR}:/config
      - ${DOCKER_SOCKET}:/var/run/docker.sock
      - ${MEDIA_DIR}:/media
    labels: 
      # Most labels ship with lostack, however the URL can't be set on build
      - "homepage.href=https://lostack.${DOMAINNAME}/"

  lostack-db:
    image: mariadb:10.11
    container_name: lostack-db
    hostname: lostack-db
    networks:
      traefik_network: {}
    environment:
      - MYSQL_ROOT_PASSWORD=${ADMIN_PASSWORD}
      - MYSQL_DATABASE=lostack-db
      - MYSQL_USER=lostack
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - TZ=${TZ}
    restart: unless-stopped
    volumes:
      - ${APPDATA_DIR}/lostack-db/:/var/lib/mysql
    labels:
      - "homepage.name=LoStack MariaDB"
      - "homepage.group=Databases"
      - "homepage.icon=mariadb"
      - "homepage.description=Container Auto-Start"
    entrypoint: >
      sh -c '
        set -e
        INIT_FILE="/docker-entrypoint-initdb.d/init-authelia.sql"
        mkdir -p /docker-entrypoint-initdb.d
        echo "CREATE DATABASE IF NOT EXISTS authelia CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;" > "$$INIT_FILE"
        exec /usr/local/bin/docker-entrypoint.sh mysqld
      ' sh
              
  traefik:
    image: traefik:latest
    container_name: traefik
    hostname: traefik
    restart: unless-stopped
    networks:
      traefik_network:
        aliases:
          - 'traefik'
          - 'traefik.${DOMAINNAME}'
          - '${AUTHELIA_PREFIX}.${DOMAINNAME}'
    dns:
      - ${DNS_IP}
      - ${HOST_IP}
    environment:
      TZ: ${TZ}
      DOMAINNAME: ${DOMAINNAME}
    command:
      - "--global.sendAnonymousUsage=false"
      - "--global.checkNewVersion=false"
      - "--log.level=DEBUG"
      - "--log.filepath=logs/traefik.log"
      - "--api.dashboard=true"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.https.http.middlewares=authelia@docker"
      - "--entrypoints.https.http.tls=true"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.http.http.middlewares=redirect-to-https"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.file.directory=/dynamic/"
      - "--providers.file.watch=true"
    ports:
      - ${TRAEFIK_PORT_HTTP}:80
      - ${TRAEFIK_PORT_HTTPS}:443
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock:ro
      - ${CERTS_DIR}:/certs:ro
      - ${CONFIG_DIR}/traefik/:/dynamic
      - ${LOGS_DIR}/traefik:/logs
    labels:
      - "traefik.enable=true"
      # TLS options
      - "traefik.tls.options.modern.minVersion=VersionTLS13"
      - "traefik.tls.options.intermediate.minVersion=VersionTLS12"
      - "traefik.tls.options.intermediate.cipherSuites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
      # Add auth middleware
      - "traefik.http.routers.api.middlewares=authelia@docker,redirect-to-https"
      # Add lostack middleware for use in lostack-generated config 
      - "traefik.http.middlewares.lostack-middleware.forwardauth.address=http://lostack:80/middleware/auth"
      - "traefik.http.middlewares.lostack-middleware.forwardauth.trustForwardHeader=true"
      - 'traefik.http.middlewares.lostack-middleware.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
      # Define redirect-to-https middleware
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      # Associate traefik with hostname
      - "traefik.http.routers.traefik.tls.domains[1].main=${DOMAINNAME}"
      - "traefik.http.routers.traefik.tls.domains[1].sans=*.${DOMAINNAME}"
      # Add traefik dashboard routing
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAINNAME}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.options=default"
      # Configure homepage automatic discovery
      - "homepage.name=Traefik Dashboard"
      - "homepage.group=Admin"
      - "homepage.icon=traefik"
      - "homepage.description=Traefik proxy dashboard"
      - "homepage.href=https://traefik.${DOMAINNAME}/"
      - "lostack.enable=true"
      - "lostack.port=80"
      - "lostack.autostart=false" # DO NOT ENABLE
      - "lostack.autoupdate=false" # DO NOT ENABLE
      - "lostack.access_control=false" # DO NOT ENABLE
      - "lostack.group=traefik"
      - "lostack.duration=999h"
      - "lostack.primary=true"
      - "lostack.force_disable_autostart=true"
      - "lostack.force_disable_access_control=false"
      - "lostack.force_disable_autoupdate=true"
      - "lostack.force_compose_edit=true" # Prevents editing in gui

  # Optional container - adds local dns if you can't create records on your router
  coredns:
    image: coredns/coredns
    container_name: coredns
    hostname: coredns
    network_mode: host
    restart: unless-stopped
    command: -conf /data/Corefile
    environment:
      HOST_IP: ${HOST_IP}
      HOSTNAME: ${HOSTNAME}
      DOMEXT: ${DOMEXT}
      DOMAINNAME: ${DOMAINNAME}
      DNS_IP: ${DNS_IP}
      DNS_EXPIRATION_TIME: 5m
    volumes:
      - ${CONFIG_DIR}/coredns/config:/config/
      - ${CONFIG_DIR}/coredns/Corefile:/data/Corefile
    labels:
      - "homepage.name=CoreDNS"
      - "homepage.group=Background Services"
      - "homepage.icon=coredns"
      - "homepage.description=Local Name Service"